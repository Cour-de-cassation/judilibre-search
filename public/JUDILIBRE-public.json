{
  "openapi": "3.0.2",
  "info": {
    "title": "JUDILIBRE-public",
    "version": "1.0.3",
    "description": "La Cour de cassation, dans le cadre de la refonte de son site Web, a initié le projet JUDILIBRE visant à la conception et au développement en interne d'un moteur de recherche dans le corpus jurisprudentiel, mettant celui-ci à disposition du public dans l'esprit du décret sur l'Open Data des décisions de justice.",
    "contact": {
      "name": "Sébastien COURVOISIER",
      "email": "sebastien.courvoisier@justice.fr"
    }
  },
  "paths": {
    "/decision": {
      "get": {
        "servers": [
          {
            "url": "http://search.judilibre.io",
            "description": "Serveur de recherche."
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Identifiant de la décision à récupérer.",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": true
          },
          {
            "name": "resolve_references",
            "description": "Lorsque ce paramètre vaut `true`, le résultat de la requête contiendra, pour chaque information retournée par défaut sous forme de clé, l'intitulé complet de celle-ci (vaut `false` par défaut).",
            "schema": {
              "type": "boolean"
            },
            "in": "query"
          },
          {
            "name": "query",
            "description": "Chaîne de caractères correspondant à la recherche. Ce paramètre est utilisé pour surligner en retour, dans le texte intégral de la décision, les termes correspondant avec la recherche initiale (ces termes étant délimitées par des balises `<em>`).",
            "schema": {
              "type": "string"
            },
            "in": "query"
          },
          {
            "name": "operator",
            "description": "Opérateur logique reliant les multiples termes que le paramètre `query` peut contenir (`or` par défaut, `and` ou `exact` – dans ce dernier cas le moteur recherchera exactement le contenu du paramètre `query`).",
            "schema": {
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/decisionFull"
                },
                "examples": {
                  "Exemple de décision.": {
                    "value": {
                      "id": "5fca7d162a251e6bf9c78514",
                      "jurisdiction": "cc",
                      "chamber": "civ3",
                      "number": "17-18.194",
                      "numbers": ["17-18.194", "16-21.165"],
                      "ecli": "ECLI:FR:CCASS:2018:C301117",
                      "formation": "fs",
                      "publication": ["c", "b"],
                      "decision_date": "2018-12-20",
                      "type": "arret",
                      "solution": "rejet",
                      "summary": "Le titulaire d'une autorisation temporaire d'occupation, en vigueur au moment de la procédure d'expropriation, est en droit d'obtenir l'indemnisation de son préjudice résultant de l'expropriation",
                      "themes": [
                        "Expropriation pour cause d'utilité publique",
                        "Indemnité",
                        "Préjudice",
                        "Réparation",
                        "Cas",
                        "Titulaire d'une autorisation temporaire d'occupation en vigueur"
                      ],
                      "text": "CIV.3 \r\nCH.B\r\n\r\n\r\n\r\nCOUR DE CASSATION\r\n______________________\r\n\r\n\r\nAudience publique du 20 décembre 2018\r\n\r\n\r\n\r\n\r\nRejet\r\n\r\n\r\nM. CHAUVIN, président\r\n\r\n\r\n\r\nArrêt n° 1117 FS-P+B+I\r\n\r\nPourvoi n° C 17-18.194\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nR É P U B L I Q U E F R A N Ç A I S E\r\n\r\n_________________________\r\n\r\nAU NOM DU PEUPLE FRANÇAIS\r\n_________________________\r\n\r\n\r\nLA COUR DE CASSATION, TROISIÈME CHAMBRE CIVILE, a rendu l'arrêt suivant :\r\n\r\nStatuant sur le pourvoi (...) la cour d'appel n'a pas mis la Cour de cassation en mesure d'exercer son contrôle, violant ainsi les articles 455 du code de procédure civile, ensemble les articles L. 322-1 L. 322-2 du code de l'expropriation.",
                      "zones": {
                        "introduction": [
                          {
                            "start": 0,
                            "end": 2309
                          }
                        ],
                        "motivations": [
                          {
                            "start": 2309,
                            "end": 4834
                          }
                        ],
                        "dispositif": [
                          {
                            "start": 4834,
                            "end": 5199
                          }
                        ],
                        "annexes": [
                          {
                            "start": 5199,
                            "end": 16798
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "description": "Décision retournée avec succès."
          },
          "400": {
            "description": "Requête invalide."
          },
          "401": {
            "description": "Authentification requise."
          },
          "403": {
            "description": "Permissions insuffisantes."
          },
          "404": {
            "description": "Décision introuvable."
          },
          "423": {
            "description": "Accès bloqué suite à une activité suspecte."
          },
          "429": {
            "description": "Trop de requêtes."
          },
          "500": {
            "description": "Erreur indéfinie côté serveur."
          }
        },
        "security": [
          {},
          {
            "advanced": []
          },
          {
            "admin": []
          }
        ],
        "operationId": "decision",
        "summary": "Permet de récupérer le contenu intégral d'une décision.",
        "description": "Connaissant l'identifiant unique d'une décision, le point d'entrée `GET /decision` permet d'en récupérer le contenu intégral (structuré, mais sans mise en forme), à savoir :\n\n* L'identifiant de sa juridiction ;\n* L'identifiant de sa chambre ;\n* Sa formation ;\n* Son numéro de pourvoi ;\n* Son ECLI (« European Case Law Identifier » : identifiant européen de la jurisprudence) ;\n* Son code NAC ;\n* Son niveau de publication ;\n* Son numéro de publication au bulletin ;\n* Sa solution ;\n* Sa date ;\n* Son texte intégral ;\n* Les délimitations des principales zones d'intérêt de son texte intégral (introduction, exposé du litige, moyens, motivations, dispositif et moyens annexés) ;\n* Ses éléments de titrage ;\n* Son sommaire ;\n* Ses documents associés (communiqué, note explicative, traduction, rapport, avis de l'avocat général, etc.) ;\n* Les textes appliqués ;\n* Les rapprochements de jurisprudence.\n\nCertaines des informations ne sont retournées que sous forme de clé ou d'identifiant numérique (juridiction, chambre, niveau de publication, etc.). Il convient dès lors d'utiliser le point d'entrée `GET /taxonomy` pour en récupérer l'intitulé complet, ou d'effectuer la requête en utilisant le paramètre `resolve_references=true`."
      }
    },
    "/taxonomy": {
      "get": {
        "servers": [
          {
            "url": "http://search.judilibre.io",
            "description": "Serveur de recherche."
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Identifiant de l'entrée de taxonomie à interroger (`type`, `jurisdiction`, `chamber`, etc. - les valeurs disponibles sont accessibles via `GET /taxonomy` sans paramètre).",
            "schema": {
              "type": "string"
            },
            "in": "query"
          },
          {
            "name": "key",
            "description": "Clé du terme dont on veut récupérer l'intitulé complet (le paramètre `id` est alors requis), par exemple : la requête `GET /taxonomy?id=jurisdiction&key=cc` retournera `Cour de cassation`.",
            "schema": {
              "type": "string"
            },
            "in": "query"
          },
          {
            "name": "value",
            "description": "Intitulé complet du terme dont on veut récupérer la clé (le paramètre `id` est alors requis), par exemple : la requête `GET /taxonomy?id=jurisdiction&value=cour%20de%20cassation` retournera `cc`.",
            "schema": {
              "type": "string"
            },
            "in": "query"
          },
          {
            "name": "context_value",
            "description": "Valeur pouvant être requise pour contextualiser certaines listes (par exemple, la liste des chambres qui n’a de sens que dans le contexte d’une juridiction – ainsi, pour obtenir la liste des chambres de la Cour de cassation : `GET /taxonomy?id=chamber&context_value=cc`).",
            "schema": {
              "type": "string"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taxonResult"
                },
                "examples": {
                  "GET /taxonomy?id=publication": {
                    "value": {
                      "id": "publication",
                      "result": {
                        "b": "Publié au Bulletin",
                        "l": "Publié aux Lettres de chambre",
                        "r": "Publié au Rapport",
                        "c": "Communiqué de presse"
                      }
                    }
                  },
                  "GET /taxonomy?id=publication&key=b": {
                    "value": {
                      "id": "publication",
                      "key": "b",
                      "result": {
                        "value": "Publié au Bulletin"
                      }
                    }
                  },
                  "GET /taxonomy?id=publication&value=Publi%C3%A9%20au%20Rapport": {
                    "value": {
                      "id": "publication",
                      "value": "Publié au Rapport",
                      "result": {
                        "key": "r"
                      }
                    }
                  }
                }
              }
            },
            "description": "Requête effectuée avec succès."
          },
          "400": {
            "description": "Requête invalide."
          },
          "423": {
            "description": "Accès bloqué suite à une activité suspecte."
          },
          "429": {
            "description": "Trop de requêtes."
          },
          "500": {
            "description": "Erreur indéfinie côté serveur."
          }
        },
        "security": [{}],
        "operationId": "taxonomy",
        "summary": "Permet de récupérer les listes des termes employés par le processus de recherche.",
        "description": "L'API publique propose la récupération des listes des termes (sous la forme d'un couple clé/valeur) constituants les différents critères et filtres pris en compte par le processus de recherche et les données qu'il restitue, notamment :\n\n* La liste des types de décision (`type`) ;\n* La liste des juridictions dont le système intègre les décisions (`jurisdiction`) ;\n* La liste des chambres (`chamber`) ;\n* La liste des formations (`formation`) ;\n* La liste des commissions (`committee`) ;\n* La liste des niveaux de publication (`publication`) ;\n* La liste des matières (`theme`) ;\n* La liste des solutions (`solution`) ;\n* La liste des champs et des zones de contenu des décisions pouvant être ciblés par la recherche (`field`) ;\n* La liste des zones de contenu des décisions (`zones`) ;\n* etc.\n\nLa publication de cette taxonomie permet principalement au prestataire chargé de l'implémentation du frontend (ainsi qu'à certains réutilisateurs avancés) d'automatiser la constitution des formulaires de recherche et l'enrichissement des résultats retournés."
      }
    },
    "/stats": {
      "get": {
        "servers": [
          {
            "url": "http://search.judilibre.io",
            "description": "Serveur de recherche."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stats"
                },
                "examples": {
                  "Exemple de statistiques.": {
                    "value": {
                      "requestPerDay": 2500,
                      "oldestDecision": "1856-07-27",
                      "newestDecision": "2021-04-15",
                      "indexedTotal": 2250000,
                      "indexedByJurisdiction": [
                        {
                          "value": 1500000,
                          "label": "Cour de cassation"
                        },
                        {
                          "value": 135000,
                          "label": "Cour d'appel de Paris"
                        }
                      ],
                      "indexedByYear": [
                        {
                          "value": 250000,
                          "label": "2019"
                        },
                        {
                          "value": 195000,
                          "label": "2018"
                        }
                      ],
                      "requestPerWeek": 17500,
                      "requestPerMonth": 520000
                    }
                  }
                }
              }
            },
            "description": "Requête effectuée avec succès."
          },
          "400": {
            "description": "Requête invalide."
          },
          "423": {
            "description": "Accès bloqué suite à une activité suspecte."
          },
          "429": {
            "description": "Trop de requêtes."
          },
          "500": {
            "description": "Erreur indéfinie côté serveur."
          }
        },
        "security": [
          {},
          {
            "admin": []
          }
        ],
        "operationId": "stats",
        "summary": "Permet de récupérer des statistiques sur le contenu de la base JUDILIBRE.",
        "description": "Ce point d'entrée publiera notamment les statistiques suivantes, mises à jour quotidiennement :\n\n* Nombre de décisions indexées (au total, par année, par juridiction) ;\n* Nombre de requêtes (par jour, par semaine, etc.) ;\n* Date de la décision la plus ancienne, date de la décision la plus récente."
      }
    },
    "/search": {
      "get": {
        "servers": [
          {
            "url": "http://search.judilibre.io",
            "description": "Serveur de recherche."
          }
        ],
        "parameters": [
          {
            "name": "query",
            "description": "Chaîne de caractères correspondant à la recherche. Une recherche avec un paramètre `query` vide ou manquant est ignorée et retourne un résultat vide.",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "field",
            "description": "Liste des champs, métadonnées ou zones de contenu ciblés par la recherche (parmi les valeurs : `expose`, `moyens`, `motivations`, `dispositif`, `annexes`, `sommaire`, `titrage`, etc. - les valeurs disponibles sont accessibles via `GET /taxonomy?id=field`). Une recherche avec un paramètre `field` vide ou manquant est appliquée à l'intégralité de la décision (introduction et moyens annexés compris) mais va exclure les métadonnées (sommaire, titrage, etc.).",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          },
          {
            "name": "operator",
            "description": "Opérateur logique reliant les multiples termes que le paramètre `query` peut contenir (`or` par défaut, `and` ou `exact` – dans ce dernier cas le moteur recherchera exactement le contenu du paramètre `query`).",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "type",
            "description": "Filtre les résultats suivant la natures des décisions (parmi les valeurs : `arret`, `qpc`, `ordonnance`, `saisie`, etc. - les valeurs disponibles sont accessibles via `GET /taxonomy?id=type`). Une recherche avec un paramètre `type` vide ou manquant retourne des décisions de toutes natures.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          },
          {
            "name": "theme",
            "description": "Filtre les résultats suivant la matière (nomenclature de la Cour de cassation) relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=theme`). Une recherche avec un paramètre `theme` vide ou manquant retourne des décisions relatives à toutes les matières.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          },
          {
            "name": "chamber",
            "description": "Filtre les résultats suivant la chambre relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=chamber`). Une recherche avec un paramètre `chamber` vide ou manquant retourne des décisions relatives à toutes les chambres.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          },
          {
            "name": "formation",
            "description": "Filtre les résultats suivant la formation relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=formation`). Une recherche avec un paramètre `formation` vide ou manquant retourne des décisions relatives à toutes les formations.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          },
          {
            "name": "jurisdiction",
            "description": "Filtre les résultats suivant la juridiction relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=jurisdiction`). Une recherche avec un paramètre `jurisdiction` vide ou manquant retourne des décisions relatives à toutes les juridictions.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          },
          {
            "name": "committee",
            "description": "Filtre les résultats suivant la commission relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=committee`). Une recherche avec un paramètre `committee` vide ou manquant retourne des décisions relatives à toutes les commissions.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          },
          {
            "name": "publication",
            "description": "Filtre les résultats suivant le niveau de publication des décisions (parmi les valeurs : `b`, `r`, `l`, `c`, etc. - les valeurs disponibles sont accessibles via `GET /taxonomy?id=publication`). Une recherche avec un paramètre `publication` vide ou manquant retourne des décisions de n'importe quel niveau de publication.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          },
          {
            "name": "solution",
            "description": "Filtre les résultats suivant le type de solution des décisions (parmi les valeurs : `annulation`, `avis`, `cassation`, `decheance`, `designation`, `irrecevabilite`, `nonlieu`, `qpc`, `rabat`, etc. - les valeurs disponibles sont accessibles via `GET /taxonomy?id=solution`). Une recherche avec un paramètre `solution` vide retourne des décisions ayant n'importe quel type de solution.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          },
          {
            "name": "date_start",
            "description": "Combiné avec le paramètre `date_end`, permet de restreindre les résultats à un intervalle de dates, au format ISO-8601 (par exemple 2021-05-13).",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "date_end",
            "description": "Combiné avec le paramètre `date_start`, permet de restreindre les résultats à un intervalle de dates, au format ISO-8601 (par exemple 2021-05-13).",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "sort",
            "description": "Permet de choisir la valeur suivant laquelle les résultats sont triés (`score` pour un tri par pertinence, `scorepub` pour un tri par pertinence et niveau de publication et `date` pour un tri par date, vaut `scorepub` par défaut).",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "order",
            "description": "Permet de choisir l'ordre du tri (`asc` pour un tri ascendant ou `desc` pour un tri descendant, vaut `desc` par défaut).",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "page_size",
            "description": "Permet de déterminer le nombre de résultats retournés par page (50 maximum, vaut 10 par défaut).",
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "page",
            "description": "Permet de déterminer le numéro de la page de résultats à retourner (la première page valant `0`).",
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "resolve_references",
            "description": "Lorsque ce paramètre vaut `true`, le résultat de la requête contiendra, pour chaque information retournée par défaut sous forme de clé, l'intitulé complet de celle-ci (vaut `false` par défaut).",
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "withFileOfType",
            "description": "Filtre les résultats suivant le type de documents associés aux décisions, parmi les valeurs : `prep_rapp` (Rapport du rapporteur), `prep_avis` (Avis de l’avocat général), `prep_oral` (Avis oral de l’avocat général), `comm_comm` (Communiqué), `comm_note` (Note explicative), `comm_nora` (Notice au rapport annuel), `comm_lett` (Lettre de chambre), `comm_trad` (Arrêt traduit). Les valeurs disponibles sont accessibles via `GET /taxonomy?id=filetype`.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/searchPage"
                },
                "examples": {
                  "Exemple de résultat de recherche.": {
                    "value": {
                      "page": 0,
                      "page_size": 10,
                      "query": {
                        "query": "expropriation",
                        "field": ["expose", "moyens", "motivations"],
                        "operator": "or",
                        "type": ["arret", "qpc"],
                        "theme": [],
                        "chamber": [],
                        "formation": [],
                        "jurisdiction": [],
                        "committee": [],
                        "publication": ["c", "b"],
                        "solution": [],
                        "date_start": "1970-01-01",
                        "date_end": "2021-01-01",
                        "sort": "score",
                        "order": "desc",
                        "page_size": 10,
                        "page": 0,
                        "resolve_references": false
                      },
                      "total": 341,
                      "next_page": "http://.../...&page=1",
                      "took": 14,
                      "max_score": 2428.1362,
                      "relaxed": false,
                      "results": [
                        {
                          "score": 0.6848325044168517,
                          "highlights": {
                            "motivations": [
                              "2016) fixe les indemnités revenant à la société Nour, depuis en liquidation judiciaire, à la suite de <em>l'expropriation</em>",
                              "indemnités allouées doivent couvrir l'intégralité du préjudice direct, matériel et certain causé par <em>l'expropriation</em>",
                              "Nour ne bénéficiait que d'une autorisation précaire d'exploiter son fonds sur la terrasse, objet de <em>l'expropriation</em>",
                              ";\r\n\r\n2°/ qu'en énonçant que cette autorisation était toujours en vigueur au moment de la procédure <em>d'expropriation</em>",
                              ", la cour d'appel en a exactement déduit que, le préjudice de cette société étant en lien avec <em>l'expropriation</em>"
                            ]
                          },
                          "id": "5fca7d162a251e6bf9c78514",
                          "jurisdiction": "cc",
                          "chamber": "civ3",
                          "number": "17-18.194",
                          "numbers": ["17-18.194", "16-21.165"],
                          "ecli": "ECLI:FR:CCASS:2018:C301117",
                          "formation": "fs",
                          "publication": ["c", "b"],
                          "decision_date": "2018-12-20",
                          "type": "arret",
                          "solution": "rejet",
                          "summary": "Le titulaire d'une autorisation temporaire d'occupation, en vigueur au moment de la procédure d'expropriation, est en droit d'obtenir l'indemnisation de son préjudice résultant de l'expropriation",
                          "themes": [
                            "Expropriation pour cause d'utilité publique",
                            "Indemnité",
                            "Préjudice",
                            "Réparation",
                            "Cas",
                            "Titulaire d'une autorisation temporaire d'occupation en vigueur"
                          ]
                        },
                        {}
                      ]
                    }
                  }
                }
              }
            },
            "description": "Recherche effectuée avec succès."
          },
          "400": {
            "description": "Requête invalide."
          },
          "401": {
            "description": "Authentification requise."
          },
          "403": {
            "description": "Permissions insuffisantes."
          },
          "423": {
            "description": "Accès bloqué suite à une activité suspecte."
          },
          "429": {
            "description": "Trop de requêtes."
          },
          "500": {
            "description": "Erreur indéfinie côté serveur."
          }
        },
        "security": [
          {},
          {
            "advanced": []
          },
          {
            "admin": []
          }
        ],
        "operationId": "search",
        "summary": "Permet d'effectuer une recherche dans les données ouvertes des décisions de justice.",
        "description": "Le point d'entrée `GET /search` permet d'effectuer une recherche dans la base de données ouverte des décisions de justice, suivant les paramètres, filtres et critères suivants :\n\n* Texte en saisie libre, lequel sera mis en correspondance avec tout ou partie du contenu des décisions ;\n* Le mode de mise en rapport des termes de la recherche (*ou*, *et*, expression exacte) ;\n* Contenu ciblé par la recherche : décision intégrale, zones spécifiques de la décision (exposé du litige, moyens, motivations, dispositif), sommaire, titrages, numéro de pourvoi, etc. ;\n* Nature de décision (filtre) ;\n* Matière (filtre) ;\n* Chambre et formation (filtre) ;\n* Juridiction et commission (filtre) ;\n* Niveau de publication (filtre) ;\n* Type de solution (filtre) ;\n* Intervalle de dates (filtre) ;\n* Pertinence et date (tri) ;\n* Nombre de résultats par page et index de la page de résultats affichée (navigation).\n\nLa pertinence de la recherche équivaut à un score calculé par Elasticsearch à partir de la correspondance entre le texte en saisie libre et le contenu recherché. Par défaut, le moteur de recherche retourne les résultats classés par pertinence décroissante.\n\nLes filtres sélectionnés ne modifient pas le score, mais permettent de retirer des résultats les décisions dont le contenu ne coïncide pas avec eux.\n\nLe résultat de la recherche est nécessairement paginé (avec un maximum de 50 résultats par page, pour un maximum de 10 000 résultats au total) et ne contient qu'un aperçu des décisions trouvées (chacune possédant un identifiant unique).\n\nCertaines des informations ne sont retournées que sous forme de clé ou d'identifiant numérique (juridiction, chambre, niveau de publication, etc.). Il convient dès lors d'utiliser le point d'entrée `GET /taxonomy` pour en récupérer l'intitulé complet, ou d'effectuer la requête en utilisant le paramètre `resolve_references=true`.\n\nLe texte intégral et les zones qu'il contient ne sont pas inclus dans les résultats de la recherche.\n\nLa récupération d'une décision complète (incluant son texte et les zones qu'il contient) repose sur le point d'entrée `GET /decision`."
      }
    },
    "/export": {
      "get": {
        "servers": [
          {
            "url": "http://search.judilibre.io",
            "description": "Serveur de recherche."
          }
        ],
        "parameters": [
          {
            "name": "type",
            "description": "Filtre les résultats suivant la natures des décisions (parmi les valeurs : `arret`, `qpc`, `ordonnance`, `saisie`, etc. - les valeurs disponibles sont accessibles via `GET /taxonomy?id=type`). Un export avec un paramètre `type` vide ou manquant retourne des décisions de toutes natures.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          },
          {
            "name": "theme",
            "description": "Filtre les résultats suivant la matière (nomenclature de la Cour de cassation) relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=theme`). Un export avec un paramètre `theme` vide ou manquant retourne des décisions relatives à toutes les matières.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          },
          {
            "name": "chamber",
            "description": "Filtre les résultats suivant la chambre relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=chamber`). Un export avec un paramètre `chamber` vide ou manquant retourne des décisions relatives à toutes les chambres.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          },
          {
            "name": "formation",
            "description": "Filtre les résultats suivant la formation relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=formation`). Un export avec un paramètre `formation` vide ou manquant retourne des décisions relatives à toutes les formations.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          },
          {
            "name": "jurisdiction",
            "description": "Filtre les résultats suivant la juridiction relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=jurisdiction`). Un export avec un paramètre `jurisdiction` vide ou manquant retourne des décisions relatives à toutes les juridictions.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          },
          {
            "name": "committee",
            "description": "Filtre les résultats suivant la commission relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=committee`). Un export avec un paramètre `committee` vide ou manquant retourne des décisions relatives à toutes les commissions.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          },
          {
            "name": "publication",
            "description": "Filtre les résultats suivant le niveau de publication des décisions (parmi les valeurs : `b`, `r`, `l`, `c`, etc. - les valeurs disponibles sont accessibles via `GET /taxonomy?id=publication`). Un export avec un paramètre `publication` vide ou manquant retourne des décisions de n'importe quel niveau de publication.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          },
          {
            "name": "solution",
            "description": "Filtre les résultats suivant le type de solution des décisions (parmi les valeurs : `annulation`, `avis`, `cassation`, `decheance`, `designation`, `irrecevabilite`, `nonlieu`, `qpc`, `rabat`, etc. - les valeurs disponibles sont accessibles via `GET /taxonomy?id=solution`). Un export avec un paramètre `solution` vide retourne des décisions ayant n'importe quel type de solution.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          },
          {
            "name": "date_start",
            "description": "Combiné avec le paramètre `date_end`, permet de restreindre les résultats à un intervalle de dates, au format ISO-8601 (par exemple 2021-05-13).",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "date_end",
            "description": "Combiné avec le paramètre `date_start`, permet de restreindre les résultats à un intervalle de dates, au format ISO-8601 (par exemple 2021-05-13).",
            "schema": {
              "format": "date",
              "type": "string"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "abridged",
            "description": "Lorsque ce paramètre vaut `true`, le résultat de la requête contiendra la version abrégée des décisions (sans texte intégral ni métadonnées détaillées, vaut `false` par défaut).",
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "date_type",
            "description": "Type de date à prendre en compte pour l’intervalle de dates fourni pour l’export (vaut `creation` ou `update`).",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "order",
            "description": "Permet de choisir l’ordre du tri des décisions exportées ('asc' pour un tri par date chronologique ou 'desc' pour un tri par date antichronologique, vaut 'asc' par défaut).",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "batch_size",
            "description": "Permet de déterminer le nombre de résultats retournés par lot (1000 maximum, vaut 10 par défaut).",
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "batch",
            "description": "Permet de déterminer le numéro du lot de résultats à retourner (le premier lot ayant la valeur 0).",
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "required": true
          },
          {
            "name": "resolve_references",
            "description": "Lorsque ce paramètre vaut `true`, le résultat de la requête contiendra, pour chaque information retournée par défaut sous forme de clé, l'intitulé complet de celle-ci (vaut `false` par défaut).",
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "required": false
          },
          {
            "name": "withFileOfType",
            "description": "Filtre les résultats suivant le type de documents associés aux décisions, parmi les valeurs : `prep_rapp` (Rapport du rapporteur), `prep_avis` (Avis de l’avocat général), `prep_oral` (Avis oral de l’avocat général), `comm_comm` (Communiqué), `comm_note` (Note explicative), `comm_nora` (Notice au rapport annuel), `comm_lett` (Lettre de chambre), `comm_trad` (Arrêt traduit). Les valeurs disponibles sont accessibles via `GET /taxonomy?id=filetype`.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/exportBatch"
                },
                "examples": {
                  "Exemple d'export.": {
                    "value": {
                      "batch": 0,
                      "batch_size": 10,
                      "query": {
                        "type": ["arret", "qpc"],
                        "theme": [],
                        "chamber": [],
                        "formation": [],
                        "jurisdiction": [],
                        "committee": [],
                        "publication": ["c", "b"],
                        "solution": [],
                        "date_start": "1970-01-01",
                        "date_end": "2021-01-01",
                        "order": "desc",
                        "batch_size": 10,
                        "batch": 0,
                        "resolve_references": false
                      },
                      "total": 341,
                      "next_batch": "http://.../...&batch=1",
                      "took": 42,
                      "results": [
                        {
                          "id": "5fca7d162a251e6bf9c78514",
                          "jurisdiction": "cc",
                          "chamber": "civ3",
                          "number": "17-18.194",
                          "numbers": ["17-18.194", "16-21.165"],
                          "ecli": "ECLI:FR:CCASS:2018:C301117",
                          "formation": "fs",
                          "publication": ["c", "b"],
                          "decision_date": "2018-12-20",
                          "type": "arret",
                          "solution": "rejet",
                          "summary": "Le titulaire d'une autorisation temporaire d'occupation, en vigueur au moment de la procédure d'expropriation, est en droit d'obtenir l'indemnisation de son préjudice résultant de l'expropriation",
                          "themes": [
                            "Expropriation pour cause d'utilité publique",
                            "Indemnité",
                            "Préjudice",
                            "Réparation",
                            "Cas",
                            "Titulaire d'une autorisation temporaire d'occupation en vigueur"
                          ],
                          "text": "CIV.3 \r\nCH.B\r\n\r\n\r\n\r\nCOUR DE CASSATION\r\n______________________\r\n\r\n\r\nAudience publique du 20 décembre 2018\r\n\r\n\r\n\r\n\r\nRejet\r\n\r\n\r\nM. CHAUVIN, président\r\n\r\n\r\n\r\nArrêt n° 1117 FS-P+B+I\r\n\r\nPourvoi n° C 17-18.194\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nR É P U B L I Q U E F R A N Ç A I S E\r\n\r\n_________________________\r\n\r\nAU NOM DU PEUPLE FRANÇAIS\r\n_________________________\r\n\r\n\r\nLA COUR DE CASSATION, TROISIÈME CHAMBRE CIVILE, a rendu l'arrêt suivant :\r\n\r\nStatuant sur le pourvoi (...) la cour d'appel n'a pas mis la Cour de cassation en mesure d'exercer son contrôle, violant ainsi les articles 455 du code de procédure civile, ensemble les articles L. 322-1 L. 322-2 du code de l'expropriation.",
                          "zones": {
                            "introduction": [
                              {
                                "start": 0,
                                "end": 2309
                              }
                            ],
                            "motivations": [
                              {
                                "start": 2309,
                                "end": 4834
                              }
                            ],
                            "dispositif": [
                              {
                                "start": 4834,
                                "end": 5199
                              }
                            ],
                            "annexes": [
                              {
                                "start": 5199,
                                "end": 16798
                              }
                            ]
                          }
                        },
                        {}
                      ]
                    }
                  }
                }
              }
            },
            "description": "Export effectué avec succès."
          },
          "400": {
            "description": "Requête invalide."
          },
          "401": {
            "description": "Authentification requise."
          },
          "403": {
            "description": "Permissions insuffisantes."
          },
          "423": {
            "description": "Accès bloqué suite à une activité suspecte."
          },
          "429": {
            "description": "Trop de requêtes."
          },
          "500": {
            "description": "Erreur indéfinie côté serveur."
          }
        },
        "security": [
          {},
          {
            "advanced": []
          },
          {
            "admin": []
          }
        ],
        "operationId": "export",
        "summary": "Permet d'effectuer un export par lot de décisions de justice.",
        "description": "Destiné aux utilisateurs désirant procéder à leur propre indexation et mise à disposition du contenu, ce point d'entrée leur permet de récupérer des lots de décisions complètes suivant des paramètres et critères simples :\n\n* Nature de décision (filtre) ;\n* Matière (filtre) ;\n* Chambre et formation (filtre) ;\n* Juridiction et commission (filtre) ;\n* Niveau de publication (filtre) ;\n* Type de solution (filtre) ;\n* Intervalle de dates (date de création ou de mise à jour) (filtre) ;\n* Date (tri) ;\n* Nombre de décisions par lot, index du lot (navigation).\n\nL'export par lots est limité par défaut (pour une connexion non authentifiée) à 10 résultats par lot, pour un maximum de 1000 résultats au total."
      }
    },
    "/healthcheck": {
      "get": {
        "servers": [
          {
            "url": "http://search.judilibre.io",
            "description": "Serveur de recherche."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/health"
                },
                "examples": {
                  "Serveur disponible.": {
                    "value": {
                      "status": "disponible"
                    }
                  },
                  "Serveur indisponible.": {
                    "value": {
                      "status": "indisponible"
                    }
                  }
                }
              }
            },
            "description": "État retourné avec succès."
          },
          "400": {
            "description": "Requête invalide."
          },
          "423": {
            "description": "Accès bloqué suite à une activité suspecte."
          },
          "429": {
            "description": "Trop de requêtes."
          },
          "500": {
            "description": "Erreur indéfinie côté serveur."
          }
        },
        "security": [
          {},
          {
            "admin": []
          }
        ],
        "operationId": "healthcheck",
        "summary": "Permet de récupérer l'état de disponibilité du service.",
        "description": "Ce point d'entrée permet de connaître l'état de disponibilité du service (disponible ou indisponible)."
      }
    }
  },
  "components": {
    "schemas": {
      "searchPage": {
        "title": "Type d'objet `searchPage`.",
        "description": "Décrit une page de résultats de recherche.",
        "required": ["page", "page_size", "query", "total", "took", "max_score", "relaxed"],
        "type": "object",
        "properties": {
          "page": {
            "description": "Indice de la page courante de résultat (la première page valant 0).",
            "type": "integer"
          },
          "page_size": {
            "description": "Nombre de résultats retournés par page (10 par défaut).",
            "type": "integer"
          },
          "query": {
            "$ref": "#/components/schemas/searchQuery"
          },
          "total": {
            "description": "Nombre total de décisions retournées par la requête.",
            "type": "integer"
          },
          "next_page": {
            "description": "URL de la page de résultats suivante (propriété `null` si la page courante est la dernière).",
            "type": "string",
            "nullable": true
          },
          "previous_page": {
            "description": "URL de la page de résultats précédente (propriété `null` si la page courante est la première).",
            "type": "string",
            "nullable": true
          },
          "took": {
            "description": "Temps d'exécution de la requête (en millisecondes).",
            "type": "integer"
          },
          "max_score": {
            "format": "float",
            "description": "Score maximal obtenu sur l'ensemble des résultats.",
            "type": "number"
          },
          "relaxed": {
            "description": "Vaut `true` si les résulats proviennent d'une requête plus \"lâche\", exécutée automatiquement dans le cas où la requête initiale ne retourne aucun résultat.",
            "type": "boolean"
          },
          "results": {
            "description": "Liste des résultats retournés, chaque résultat étant un objet de type `searchResult`. La liste est vide si la recherche n'a retourné aucun résultat.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/searchResult"
            }
          }
        },
        "example": {
          "page": 0,
          "page_size": 10,
          "query": {
            "query": "expropriation",
            "field": ["expose", "moyens", "motivations"],
            "operator": "or",
            "type": ["arret", "qpc"],
            "theme": [],
            "chamber": [],
            "formation": [],
            "jurisdiction": [],
            "committee": [],
            "publication": ["c", "b"],
            "solution": [],
            "date_start": "1970-01-01",
            "date_end": "2021-01-01",
            "sort": "score",
            "order": "desc",
            "page_size": 10,
            "page": 0,
            "resolve_references": false
          },
          "total": 341,
          "next_page": "http://.../...&page=1",
          "took": 14,
          "max_score": 2428.1362,
          "relaxed": false,
          "results": [
            {
              "score": 0.6848325044168517,
              "highlights": {
                "motivations": [
                  "2016) fixe les indemnités revenant à la société Nour, depuis en liquidation judiciaire, à la suite de <em>l'expropriation</em>",
                  "indemnités allouées doivent couvrir l'intégralité du préjudice direct, matériel et certain causé par <em>l'expropriation</em>",
                  "Nour ne bénéficiait que d'une autorisation précaire d'exploiter son fonds sur la terrasse, objet de <em>l'expropriation</em>",
                  ";\r\n\r\n2°/ qu'en énonçant que cette autorisation était toujours en vigueur au moment de la procédure <em>d'expropriation</em>",
                  ", la cour d'appel en a exactement déduit que, le préjudice de cette société étant en lien avec <em>l'expropriation</em>"
                ]
              },
              "id": "5fca7d162a251e6bf9c78514",
              "jurisdiction": "cc",
              "chamber": "civ3",
              "number": "17-18.194",
              "numbers": ["17-18.194", "16-21.165"],
              "ecli": "ECLI:FR:CCASS:2018:C301117",
              "formation": "fs",
              "publication": ["c", "b"],
              "decision_date": "2018-12-20",
              "type": "arret",
              "solution": "rejet",
              "summary": "Le titulaire d'une autorisation temporaire d'occupation, en vigueur au moment de la procédure d'expropriation, est en droit d'obtenir l'indemnisation de son préjudice résultant de l'expropriation",
              "themes": [
                "Expropriation pour cause d'utilité publique",
                "Indemnité",
                "Préjudice",
                "Réparation",
                "Cas",
                "Titulaire d'une autorisation temporaire d'occupation en vigueur"
              ]
            },
            {}
          ]
        }
      },
      "searchResult": {
        "title": "Type d'objet `searchResult`.",
        "description": "Décrit un élément de la litste de résultats de recherche.\n\nRappel : le texte intégral et les zones qu'il contient ne sont pas inclus dans les résultats de la recherche. La récupération d'une décision complète (incluant les zones) repose sur le point d'entrée `GET /decision`.",
        "type": "object",
        "allOf": [
          {
            "required": ["score"],
            "type": "object",
            "properties": {
              "score": {
                "format": "float",
                "description": "Score de la décision (pertinence) entre 0 et 1 (max_score).",
                "type": "number"
              },
              "highlights": {
                "description": "Liste des segments de la décision ayant des correspondances avec la requête saisie, les correspondances étant délimitées par des balises `<em>`. Chaque segment est un objet de type `searchHighlight`.",
                "type": "object",
                "items": {
                  "$ref": "#/components/schemas/searchHighlight"
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/decisionShort"
          }
        ],
        "example": {
          "score": 0.6848325044168517,
          "highlights": {
            "motivations": [
              "2016) fixe les indemnités revenant à la société Nour, depuis en liquidation judiciaire, à la suite de <em>l'expropriation</em>",
              "indemnités allouées doivent couvrir l'intégralité du préjudice direct, matériel et certain causé par <em>l'expropriation</em>",
              "Nour ne bénéficiait que d'une autorisation précaire d'exploiter son fonds sur la terrasse, objet de <em>l'expropriation</em>",
              ";\r\n\r\n2°/ qu'en énonçant que cette autorisation était toujours en vigueur au moment de la procédure <em>d'expropriation</em>",
              ", la cour d'appel en a exactement déduit que, le préjudice de cette société étant en lien avec <em>l'expropriation</em>"
            ]
          },
          "id": "5fca7d162a251e6bf9c78514",
          "jurisdiction": "cc",
          "chamber": "civ3",
          "number": "17-18.194",
          "numbers": ["17-18.194", "16-21.165"],
          "ecli": "ECLI:FR:CCASS:2018:C301117",
          "formation": "fs",
          "publication": ["c", "b"],
          "decision_date": "2018-12-20",
          "type": "arret",
          "solution": "rejet",
          "summary": "Le titulaire d'une autorisation temporaire d'occupation, en vigueur au moment de la procédure d'expropriation, est en droit d'obtenir l'indemnisation de son préjudice résultant de l'expropriation",
          "themes": [
            "Expropriation pour cause d'utilité publique",
            "Indemnité",
            "Préjudice",
            "Réparation",
            "Cas",
            "Titulaire d'une autorisation temporaire d'occupation en vigueur"
          ]
        }
      },
      "searchQuery": {
        "title": "Type d'objet `searchQuery`.",
        "description": "Décrit l'objet contenant les paramètres d'une requête de recherche.",
        "type": "object",
        "properties": {
          "query": {
            "description": "Chaîne de caractères correspondant à la recherche. Une recherche avec un paramètre `query` vide ou manquant est ignorée et retourne un résultat vide.",
            "type": "string"
          },
          "field": {
            "description": "Liste des champs, métadonnées ou zones de contenu ciblés par la recherche (parmi les valeurs : `expose`, `moyens`, `motivations`, `dispositif`, `annexes`, `sommaire`, `titrage`, etc. - les valeurs disponibles sont accessibles via `GET /taxonomy?id=field`). Une recherche avec un paramètre `field` vide ou manquant est appliquée à l'intégralité de la décision (introduction et moyens annexés compris) mais va exclure les métadonnées (sommaire, titrage, etc.).",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operator": {
            "description": "Opérateur logique reliant les multiples termes que le paramètre `query` peut contenir (`or` par défaut, `and` ou `exact` – dans ce dernier cas le moteur recherchera exactement le contenu du paramètre `query`).",
            "type": "string"
          },
          "type": {
            "description": "Filtre les résultats suivant la natures des décisions (parmi les valeurs : `arret`, `qpc`, `ordonnance`, `saisie`, etc. - les valeurs disponibles sont accessibles via `GET /taxonomy?id=type`). Une recherche avec un paramètre `type` vide ou manquant retourne des décisions de toutes natures.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "theme": {
            "description": "Filtre les résultats suivant la matière (nomenclature de la Cour de cassation) relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=theme`). Une recherche avec un paramètre `theme` vide ou manquant retourne des décisions relatives à toutes les matières.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "chamber": {
            "description": "Filtre les résultats suivant la chambre relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=chamber`). Une recherche avec un paramètre `chamber` vide ou manquant retourne des décisions relatives à toutes les chambres.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "formation": {
            "description": "Filtre les résultats suivant la formation relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=formation`). Une recherche avec un paramètre `formation` vide ou manquant retourne des décisions relatives à toutes les formations.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "jurisdiction": {
            "description": "Filtre les résultats suivant la juridiction relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=jurisdiction`). Une recherche avec un paramètre `jurisdiction` vide ou manquant retourne des décisions relatives à toutes les juridictions.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "committee": {
            "description": "Filtre les résultats suivant la commission relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=committee`). Une recherche avec un paramètre `committee` vide ou manquant retourne des décisions relatives à toutes les commissions.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publication": {
            "description": "Filtre les résultats suivant le niveau de publication des décisions (parmi les valeurs : `b`, `r`, `l`, `c`, etc. - les valeurs disponibles sont accessibles via `GET /taxonomy?id=publication`). Une recherche avec un paramètre `publication` vide ou manquant retourne des décisions de n'importe quel niveau de publication.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "solution": {
            "description": "Filtre les résultats suivant le type de solution des décisions (parmi les valeurs : `annulation`, `avis`, `cassation`, `decheance`, `designation`, `irrecevabilite`, `nonlieu`, `qpc`, `rabat`, etc. - les valeurs disponibles sont accessibles via `GET /taxonomy?id=solution`). Une recherche avec un paramètre `solution` vide retourne des décisions ayant n'importe quel type de solution.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "withFileOfType": {
            "description": "Filtre les résultats suivant le type de documents associés aux décisions, parmi les valeurs : `prep_rapp` (Rapport du rapporteur), `prep_avis` (Avis de l’avocat général), `prep_oral` (Avis oral de l’avocat général), `comm_comm` (Communiqué), `comm_note` (Note explicative), `comm_nora` (Notice au rapport annuel), `comm_lett` (Lettre de chambre), `comm_trad` (Arrêt traduit). Les valeurs disponibles sont accessibles via `GET /taxonomy?id=filetype`.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "date_start": {
            "description": "Combiné avec le paramètre `date_end`, permet de restreindre les résultats à un intervalle de dates, au format ISO-8601 (par exemple 2021-05-13).",
            "type": "string"
          },
          "date_end": {
            "description": "Combiné avec le paramètre `date_start`, permet de restreindre les résultats à un intervalle de dates, au format ISO-8601 (par exemple 2021-05-13).",
            "type": "string"
          },
          "sort": {
            "description": "Permet de choisir la valeur suivant laquelle les résultats sont triés (`score` pour un tri par pertinence, `scorepub` pour un tri par pertinence et niveau de publication et `date` pour un tri par date, vaut `scorepub` par défaut).",
            "type": "string"
          },
          "order": {
            "description": "Permet de choisir l'ordre du tri (`asc` pour un tri ascendant ou `desc` pour un tri descendant, vaut `desc` par défaut).",
            "type": "string"
          },
          "page_size": {
            "description": "Permet de déterminer le nombre de résultats retournés par page (50 maximum, vaut 10 par défaut).",
            "type": "integer"
          },
          "page": {
            "description": "Permet de déterminer le numéro de la page de résultats à retourner (la première page valant `0`).",
            "type": "integer"
          },
          "resolve_references": {
            "description": "Lorsque ce paramètre vaut `true`, le résultat de la requête contiendra, pour chaque information retournée par défaut sous forme de clé, l'intitulé complet de celle-ci (vaut `false` par défaut).",
            "type": "boolean"
          }
        },
        "example": {
          "query": "expropriation",
          "field": ["expose", "moyens", "motivations"],
          "operator": "or",
          "type": ["arret", "qpc"],
          "theme": [],
          "chamber": [],
          "formation": [],
          "jurisdiction": [],
          "committee": [],
          "publication": ["c", "b"],
          "solution": [],
          "date_start": "1970-01-01",
          "date_end": "2021-01-01",
          "sort": "score",
          "order": "desc",
          "page_size": 10,
          "page": 0,
          "resolve_references": false
        }
      },
      "searchHighlight": {
        "title": "Type d'objet `searchHighlight`.",
        "description": "Décrit un fragment de résultat contenant une correspondance avec la recherche saisie.",
        "required": ["key", "value"],
        "type": "object",
        "properties": {
          "key": {
            "description": "Nom du champ (`text` pour le texte entier) ou de la zone contenant le segment (par exemple : `expose`, `dispositif`, `summary`, etc.). Il peut y avoir plusieurs segments par zone.",
            "type": "string"
          },
          "value": {
            "description": "Liste des segments de texte contenant une ou plusieurs correspondances.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "example": {
          "dispositif": ["un <em>exemple</em> de fragment"]
        }
      },
      "decisionShort": {
        "title": "Type d'objet `decisionShort`.",
        "description": "Décrit la version courte d'un décision, telle qu'elle apparait en tant qu'item de résultat de recherche.\n\nRappel : le texte intégral et les zones qu'il contient ne sont pas inclus dans les résultats de la recherche. La récupération d'une décision complète (incluant les zones) repose sur le point d'entrée `GET /decision`.",
        "required": ["jurisdiction", "id", "chamber", "number", "numbers", "publication", "decision_date", "solution"],
        "type": "object",
        "properties": {
          "id": {
            "description": "Identifiant de la décision.",
            "type": "string"
          },
          "jurisdiction": {
            "description": "Clé de la juridiction. Par défaut, utiliser `GET /taxonomy?id=jurisdiction&key={jurisdiction}` pour récupérer l'intitulé complet de celle-ci. Si la requête utilise `resolve_references=true`, alors cette propriété contient l'intitulé complet de celle-ci.",
            "type": "string"
          },
          "chamber": {
            "description": "Clé de la chambre. Par défaut, utiliser `GET /taxonomy?id=chamber&context_value={jurisdiction}&key={chamber}` pour récupérer l'intitulé complet de celle-ci. Si la requête utilise `resolve_references=true`, alors cette propriété contient l'intitulé complet de celle-ci.",
            "type": "string"
          },
          "number": {
            "description": "Numéro de pourvoi principal de la décision.",
            "type": "string"
          },
          "numbers": {
            "description": "Tous les numéros de pourvoi de la décision.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ecli": {
            "description": "Code ECLI de la décision.",
            "type": "string"
          },
          "formation": {
            "description": "Clé de la formation. Par défaut, utiliser `GET /taxonomy?id=formation&context_value={jurisdiction}&key={formation}` pour récupérer l'intitulé complet de celle-ci. Si la requête utilise `resolve_references=true`, alors cette propriété contient l'intitulé complet de celle-ci.",
            "type": "string"
          },
          "publication": {
            "description": "Clés du niveau de publication. Par défaut, utiliser `GET /taxonomy?id=publication&context_value={jurisdiction}&key={publication}` pour récupérer le nom de chaque clé. Si la requête utilise `resolve_references=true`, alors cette propriété contient l'intitulé complet de celui-ci.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "decision_date": {
            "format": "date",
            "description": "Date de création de la décision, au format ISO-8601 (par exemple 2021-05-13).",
            "type": "string"
          },
          "type": {
            "description": "Clé du type de décision. Par défaut, utiliser `GET /taxonomy?id=type&context_value={jurisdiction}&key={type}` pour récupérer l'intitulé complet de celui-ci. Si la requête utilise `resolve_references=true`, alors cette propriété contient l'intitulé complet de celui-ci.",
            "type": "string"
          },
          "solution": {
            "description": "Clé de la solution. Par défaut, utiliser `GET /taxonomy?id=solution&context_value={jurisdiction}&key={solution}` pour récupérer l'intitulé complet de celle-ci. Si la requête utilise `resolve_references=true`, alors cette propriété contient l'intitulé complet de celle-ci.",
            "type": "string"
          },
          "solution_alt": {
            "description": "Intitulé complet de la solution (si celle-ci n'est pas normalisée et comprise dans la taxonomie, la propriété solution valant alors `other`).",
            "type": "string"
          },
          "summary": {
            "description": "Sommaire (texte brut).",
            "type": "string"
          },
          "bulletin": {
            "description": "Numéro de publication au bulletin.",
            "type": "string"
          },
          "files": {
            "description": "Liste des fichiers associés à la décision, chaque document étant représenté par un objet de type `fileLink` où `type` contient le type de document (communiqué, note explicative, traduction, rapport, avis de l'avocat général, etc.), `title` son intitulé et `url` contient le lien vers celui-ci.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fileLink"
            }
          },
          "themes": {
            "description": "Liste des matières (ou éléments de titrage) par ordre de maillons (texte brut).",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "example": {
          "id": "5fca7d162a251e6bf9c78514",
          "jurisdiction": "cc",
          "chamber": "civ3",
          "number": "17-18.194",
          "numbers": ["17-18.194", "16-21.165"],
          "ecli": "ECLI:FR:CCASS:2018:C301117",
          "formation": "fs",
          "publication": ["c", "b"],
          "decision_date": "2018-12-20",
          "type": "arret",
          "solution": "rejet",
          "summary": "Le titulaire d'une autorisation temporaire d'occupation, en vigueur au moment de la procédure d'expropriation, est en droit d'obtenir l'indemnisation de son préjudice résultant de l'expropriation",
          "themes": [
            "Expropriation pour cause d'utilité publique",
            "Indemnité",
            "Préjudice",
            "Réparation",
            "Cas",
            "Titulaire d'une autorisation temporaire d'occupation en vigueur"
          ]
        }
      },
      "decisionFull": {
        "title": "Type d'objet `decisionFull`.",
        "description": "Décrit l'objet contenant une décision intégrale.",
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "zones": {
                "$ref": "#/components/schemas/zone"
              },
              "text": {
                "description": "Texte intégral et pseudonymisé de la décision (texte brut).",
                "type": "string"
              },
              "text_highlight": {
                "description": "Texte intégral de la décision dans lequel les correspondances avec la recherche saisie (dans le cas où le paramètre `query` a été transmis à la requêtes) sont délimitées par des balises `<em>`.",
                "type": "string"
              },
              "nac": {
                "description": "Code NAC de la décision.",
                "type": "string"
              },
              "update_date": {
                "format": "date",
                "description": "Date de dernière mise à jour de la décision.",
                "type": "string"
              },
              "visa": {
                "description": "Liste des textes appliqués par la décision, chaque texte étant représenté par un objet de type `textLink` où `title` contient l'intitulé du texte et `url` contient le lien vers celui-ci.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/textLink"
                }
              },
              "contested": {
                "description": "Objet décrivant la décision attaquée, de type `decisionLink` où `title` contient son intitulé, `number` son numéro, `description` son court texte descriptif, `theme` la liste de ses matières (ou éléments de titrage) et `url` le lien vers celle-ci.",
                "$ref": "#/components/schemas/decisionLink",
                "nullable": true
              },
              "rapprochements": {
                "description": "Liste des rapprochements de jurisprudence, chaque rapprochement étant représenté par un objet de type `decisionLink` où `title` contient son intitulé, `number` son numéro, `description` son court texte descriptif, `theme` la liste de ses matières (ou éléments de titrage) et `url` le lien vers celui-ci.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/decisionLink"
                }
              },
              "to_be_deleted": {
                "description": "Lorsque la propriété `to_be_deleted` est définie et vaut `true`, alors la décision correspondante doit être supprimée des archives ou des bases de données du réutilisateur. Cette propriété peut apparaître dans le cadre d'un export des décisions mises à jour (`/export?date_type=update`).",
                "type": "boolean"
              }
            }
          },
          {
            "$ref": "#/components/schemas/decisionShort"
          }
        ],
        "example": {
          "id": "5fca7d162a251e6bf9c78514",
          "jurisdiction": "cc",
          "chamber": "civ3",
          "number": "17-18.194",
          "numbers": ["17-18.194", "16-21.165"],
          "ecli": "ECLI:FR:CCASS:2018:C301117",
          "formation": "fs",
          "publication": ["c", "b"],
          "decision_date": "2018-12-20",
          "type": "arret",
          "solution": "rejet",
          "summary": "Le titulaire d'une autorisation temporaire d'occupation, en vigueur au moment de la procédure d'expropriation, est en droit d'obtenir l'indemnisation de son préjudice résultant de l'expropriation",
          "themes": [
            "Expropriation pour cause d'utilité publique",
            "Indemnité",
            "Préjudice",
            "Réparation",
            "Cas",
            "Titulaire d'une autorisation temporaire d'occupation en vigueur"
          ],
          "text": "CIV.3 \r\nCH.B\r\n\r\n\r\n\r\nCOUR DE CASSATION\r\n______________________\r\n\r\n\r\nAudience publique du 20 décembre 2018\r\n\r\n\r\n\r\n\r\nRejet\r\n\r\n\r\nM. CHAUVIN, président\r\n\r\n\r\n\r\nArrêt n° 1117 FS-P+B+I\r\n\r\nPourvoi n° C 17-18.194\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nR É P U B L I Q U E F R A N Ç A I S E\r\n\r\n_________________________\r\n\r\nAU NOM DU PEUPLE FRANÇAIS\r\n_________________________\r\n\r\n\r\nLA COUR DE CASSATION, TROISIÈME CHAMBRE CIVILE, a rendu l'arrêt suivant :\r\n\r\nStatuant sur le pourvoi (...) la cour d'appel n'a pas mis la Cour de cassation en mesure d'exercer son contrôle, violant ainsi les articles 455 du code de procédure civile, ensemble les articles L. 322-1 L. 322-2 du code de l'expropriation.",
          "zones": {
            "introduction": [
              {
                "start": 0,
                "end": 2309
              }
            ],
            "motivations": [
              {
                "start": 2309,
                "end": 4834
              }
            ],
            "dispositif": [
              {
                "start": 4834,
                "end": 5199
              }
            ],
            "annexes": [
              {
                "start": 5199,
                "end": 16798
              }
            ]
          }
        }
      },
      "zone": {
        "title": "Type d'objet `zone`.",
        "description": "Décrit l'objet définissant une zone détectée dans le texte intégral de la décision. Chaque zone (`introduction` : introduction de la décision, `expose` : exposé du litige, `moyens` : moyens, `motivations`, motivations,`dispositif` : dispositifs, `annexes` : moyens annexés) contient une liste d'objets de type `zoneSegment`, chacun contenant un objet `{ start, end }` indiquant respectivement l'indice de début et de fin des caractères (relativement au texte intégral) contenus dans chaque segment de la zone (une zone pouvant contenir plusieurs segments).",
        "type": "object",
        "properties": {
          "introduction": {
            "description": "Une liste d'objets de type `zoneSegment`, chacun content un objet `{ start, end }` indiquant respectivement l'indice de début et de fin des caractères (relativement au texte intégral) contenus dans chaque segment de la zone 'introduction'.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/zoneSegment"
            }
          },
          "expose": {
            "description": "Une liste d'objets de type `zoneSegment`, chacun content un objet `{ start, end }` indiquant respectivement l'indice de début et de fin des caractères (relativement au texte intégral) contenus dans chaque segment de la zone 'exposé du litige'.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/zoneSegment"
            }
          },
          "moyens": {
            "description": "Une liste d'objets de type `zoneSegment`, chacun content un objet `{ start, end }` indiquant respectivement l'indice de début et de fin des caractères (relativement au texte intégral) contenus dans chaque segment de la zone 'moyens'.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/zoneSegment"
            }
          },
          "motivations": {
            "description": "Une liste d'objets de type `zoneSegment`, chacun content un objet `{ start, end }` indiquant respectivement l'indice de début et de fin des caractères (relativement au texte intégral) contenus dans chaque segment de la zone 'motivations'.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/zoneSegment"
            }
          },
          "dispositif": {
            "description": "Une liste d'objets de type `zoneSegment`, chacun content un objet `{ start, end }` indiquant respectivement l'indice de début et de fin des caractères (relativement au texte intégral) contenus dans chaque segment de la zone 'dispositifs'.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/zoneSegment"
            }
          },
          "annexes": {
            "description": "Une liste d'objets de type `zoneSegment`, chacun content un objet `{ start, end }` indiquant respectivement l'indice de début et de fin des caractères (relativement au texte intégral) contenus dans chaque segment de la zone 'moyens annexés'.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/zoneSegment"
            }
          }
        },
        "example": {
          "expose": [
            {
              "start": 8,
              "end": 72
            },
            {
              "start": 77,
              "end": 95
            }
          ]
        }
      },
      "zoneSegment": {
        "title": "Type d'objet `zoneSegment`.",
        "description": "Décrit un segment d'une zone en tant qu'objet `{ start, end }` indiquant respectivement l'indice de début et de fin des caractères (relativement au texte intégral) contenus dans le segment de la zone considérée.",
        "required": ["end", "start"],
        "type": "object",
        "properties": {
          "start": {
            "description": "Indice de début du segment.",
            "type": "integer"
          },
          "end": {
            "description": "Indice de fin du segment.",
            "type": "integer"
          }
        },
        "example": {
          "start": 34,
          "end": 1680
        }
      },
      "fileLink": {
        "title": "Type d'objet `fileLink`.",
        "description": "Objet décrivant un lien vers un document pouvant être associé à une décision.",
        "required": ["id", "name", "url", "type", "isCommunication", "date"],
        "type": "object",
        "properties": {
          "id": {
            "description": "Identifiant du document associé.",
            "type": "string"
          },
          "name": {
            "description": "Intitulé du document associé.",
            "type": "string"
          },
          "url": {
            "description": "URL du document associé.",
            "type": "string"
          },
          "type": {
            "description": "Code correspondant au type de document associé (par exemple : 'comm_comm', 'comm_note', 'comm_trad', 'prep_rapp', etc.). Par défaut, utiliser `GET /taxonomy?id=filetype&key={type}` pour récupérer l'intitulé complet de celui-ci. Si la requête utilise `resolve_references=true`, alors cette propriété contient l'intitulé complet du type de document associé (par exemple : 'Communiqué', 'Note explicative', 'Arrêt traduit', 'Rapport du rapporteur', etc.).",
            "type": "string"
          },
          "isCommunication": {
            "description": "Vaut `true` lorsque le document associé est un document de communication (sinon il s'agit d'un document préparatoire).",
            "type": "boolean"
          },
          "size": {
            "description": "Taille du fichier, dans un format \"humainement lisible\" (par exemple : `41.34 kB`)",
            "type": "string"
          },
          "date": {
            "format": "date",
            "description": "Date d'ajout du document, au format ISO-8601 (par exemple 2021-05-13).",
            "type": "string"
          }
        },
        "example": {
          "id": "5fca7d162a251e6bf9c78514",
          "url": "https://judilibre.io/traduction-5fca7d162a251e6bf9c78514.pdf",
          "name": "traduction.pdf",
          "type": "comm_trad",
          "isCommunication": true,
          "size": "952 kB",
          "date": "2020-01-14"
        }
      },
      "decisionLink": {
        "title": "Type d'objet `decisionLink`.",
        "description": "Objet décrivant un lien vers une décision.",
        "required": ["title"],
        "type": "object",
        "properties": {
          "id": {
            "description": "Identifiant de la décision.",
            "type": "string"
          },
          "date": {
            "description": "Date de la décision, au format ISO-8601 (par exemple 2021-05-13).",
            "type": "string"
          },
          "title": {
            "description": "Intitulé de la décision.",
            "type": "string"
          },
          "url": {
            "description": "URL de la décision.",
            "type": "string"
          },
          "description": {
            "description": "Description de la décision.",
            "type": "string"
          },
          "theme": {
            "description": "Liste des thèmes (ou éléments de titrage) associés à la décision.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "number": {
            "description": "Numéro de la décision.",
            "type": "string"
          },
          "content": {
            "description": "Contenu de la décision (propriété présente pour les décisions qui ne seraient pas indexées dans la base JUDILIBRE).",
            "type": "string"
          }
        },
        "example": {
          "id": "fb43",
          "title": "some text",
          "url": "some text",
          "description": "some text",
          "theme": ["some text", "some text"],
          "number": "some text"
        }
      },
      "textLink": {
        "title": "Type d'objet `textLink`.",
        "description": "Objet décrivant un lien vers un texte appliqué.",
        "required": ["title"],
        "type": "object",
        "properties": {
          "id": {
            "description": "Identifiant du texte.",
            "type": "integer"
          },
          "url": {
            "description": "URL du texte.",
            "type": "string"
          },
          "title": {
            "description": "Intitulé du texte.",
            "type": "string"
          }
        },
        "example": {
          "id": 70,
          "url": "some text",
          "title": "some text"
        }
      },
      "exportBatch": {
        "title": "Type d'objet `exportBatch`.",
        "description": "Objet décrivant un lot de décisions exportées.",
        "required": ["batch", "batch_size", "query", "total", "took"],
        "type": "object",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/exportQuery"
          },
          "total": {
            "description": "Nombre total de décisions retournées par la requête.",
            "type": "integer"
          },
          "took": {
            "description": "Temps d'exécution de la requête (en millisecondes).",
            "type": "integer"
          },
          "results": {
            "description": "Liste des résultats retournés, chaque résultat étant un objet de type `decisionFull`. La liste est vide si l'export n'a retourné aucun résultat.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/decisionFull"
            }
          },
          "next_batch": {
            "description": "URL du lot suivant (propriété `null` si le lot courant est le dernier).",
            "type": "string",
            "nullable": true
          },
          "batch": {
            "description": "Indice du lot courant (le premier lot valant 0).",
            "type": "integer"
          },
          "batch_size": {
            "description": "Nombre de résultats retournés par lot.",
            "type": "integer"
          },
          "previous_batch": {
            "description": "URL du lot précédent (propriété `null` si le lot courant est le premier).",
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "batch": 0,
          "batch_size": 10,
          "query": {
            "type": ["arret", "qpc"],
            "theme": [],
            "chamber": [],
            "formation": [],
            "jurisdiction": [],
            "committee": [],
            "publication": ["c", "b"],
            "solution": [],
            "date_start": "1970-01-01",
            "date_end": "2021-01-01",
            "order": "desc",
            "batch_size": 10,
            "batch": 0,
            "resolve_references": false
          },
          "total": 341,
          "next_batch": "http://.../...&batch=1",
          "took": 42,
          "results": [
            {
              "id": "5fca7d162a251e6bf9c78514",
              "jurisdiction": "cc",
              "chamber": "civ3",
              "number": "17-18.194",
              "numbers": ["17-18.194", "16-21.165"],
              "ecli": "ECLI:FR:CCASS:2018:C301117",
              "formation": "fs",
              "publication": ["c", "b"],
              "decision_date": "2018-12-20",
              "type": "arret",
              "solution": "rejet",
              "summary": "Le titulaire d'une autorisation temporaire d'occupation, en vigueur au moment de la procédure d'expropriation, est en droit d'obtenir l'indemnisation de son préjudice résultant de l'expropriation",
              "themes": [
                "Expropriation pour cause d'utilité publique",
                "Indemnité",
                "Préjudice",
                "Réparation",
                "Cas",
                "Titulaire d'une autorisation temporaire d'occupation en vigueur"
              ],
              "text": "CIV.3 \r\nCH.B\r\n\r\n\r\n\r\nCOUR DE CASSATION\r\n______________________\r\n\r\n\r\nAudience publique du 20 décembre 2018\r\n\r\n\r\n\r\n\r\nRejet\r\n\r\n\r\nM. CHAUVIN, président\r\n\r\n\r\n\r\nArrêt n° 1117 FS-P+B+I\r\n\r\nPourvoi n° C 17-18.194\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nR É P U B L I Q U E F R A N Ç A I S E\r\n\r\n_________________________\r\n\r\nAU NOM DU PEUPLE FRANÇAIS\r\n_________________________\r\n\r\n\r\nLA COUR DE CASSATION, TROISIÈME CHAMBRE CIVILE, a rendu l'arrêt suivant :\r\n\r\nStatuant sur le pourvoi (...) la cour d'appel n'a pas mis la Cour de cassation en mesure d'exercer son contrôle, violant ainsi les articles 455 du code de procédure civile, ensemble les articles L. 322-1 L. 322-2 du code de l'expropriation.",
              "zones": {
                "introduction": [
                  {
                    "start": 0,
                    "end": 2309
                  }
                ],
                "motivations": [
                  {
                    "start": 2309,
                    "end": 4834
                  }
                ],
                "dispositif": [
                  {
                    "start": 4834,
                    "end": 5199
                  }
                ],
                "annexes": [
                  {
                    "start": 5199,
                    "end": 16798
                  }
                ]
              }
            },
            {}
          ]
        }
      },
      "exportQuery": {
        "title": "Type d'objet `searchQuery`.",
        "description": "Décrit l'objet contenant les paramètres d'une requête d'export.",
        "type": "object",
        "properties": {
          "type": {
            "description": "Filtre les résultats suivant la natures des décisions (parmi les valeurs : `arret`, `qpc`, `ordonnance`, `saisie`, etc. - les valeurs disponibles sont accessibles via `GET /taxonomy?id=type`). Une recherche avec un paramètre `type` vide ou manquant retourne des décisions de toutes natures.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "theme": {
            "description": "Filtre les résultats suivant la matière (nomenclature de la Cour de cassation) relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=theme`). Une recherche avec un paramètre `theme` vide ou manquant retourne des décisions relatives à toutes les matières.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "chamber": {
            "description": "Filtre les résultats suivant la chambre relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=chamber`). Une recherche avec un paramètre `chamber` vide ou manquant retourne des décisions relatives à toutes les chambres.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "formation": {
            "description": "Filtre les résultats suivant la formation relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=formation`). Une recherche avec un paramètre `formation` vide ou manquant retourne des décisions relatives à toutes les formations.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "jurisdiction": {
            "description": "Filtre les résultats suivant la juridiction relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=jurisdiction`). Une recherche avec un paramètre `jurisdiction` vide ou manquant retourne des décisions relatives à toutes les juridictions.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "committee": {
            "description": "Filtre les résultats suivant la commission relative aux décisions (les valeurs disponibles sont accessibles via `GET /taxonomy?id=committee`). Une recherche avec un paramètre `committee` vide ou manquant retourne des décisions relatives à toutes les commissions.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publication": {
            "description": "Filtre les résultats suivant le niveau de publication des décisions (parmi les valeurs : `b`, `r`, `l`, `c`, etc. - les valeurs disponibles sont accessibles via `GET /taxonomy?id=publication`). Une recherche avec un paramètre `publication` vide ou manquant retourne des décisions de n'importe quel niveau de publication.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "solution": {
            "description": "Filtre les résultats suivant le type de solution des décisions (parmi les valeurs : `annulation`, `avis`, `cassation`, `decheance`, `designation`, `irrecevabilite`, `nonlieu`, `qpc`, `rabat`, etc. - les valeurs disponibles sont accessibles via `GET /taxonomy?id=solution`). Une recherche avec un paramètre `solution` vide retourne des décisions ayant n'importe quel type de solution.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "withFileOfType": {
            "description": "Filtre les résultats suivant le type de documents associés aux décisions, parmi les valeurs : `prep_rapp` (Rapport du rapporteur), `prep_avis` (Avis de l’avocat général), `prep_oral` (Avis oral de l’avocat général), `comm_comm` (Communiqué), `comm_note` (Note explicative), `comm_nora` (Notice au rapport annuel), `comm_lett` (Lettre de chambre), `comm_trad` (Arrêt traduit). Les valeurs disponibles sont accessibles via `GET /taxonomy?id=filetype`.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "date_start": {
            "description": "Combiné avec le paramètre `date_end`, permet de restreindre les résultats à un intervalle de dates, au format ISO-8601 (par exemple 2021-05-13).",
            "type": "string"
          },
          "date_end": {
            "description": "Combiné avec le paramètre `date_start`, permet de restreindre les résultats à un intervalle de dates, au format ISO-8601 (par exemple 2021-05-13).",
            "type": "string"
          },
          "order": {
            "description": "Permet de choisir l’ordre du tri des décisions exportées ('asc' pour un tri par date chronologique ou 'desc' pour un tri par date antichronologique, vaut 'asc' par défaut).",
            "type": "string"
          },
          "resolve_references": {
            "description": "Lorsque ce paramètre vaut `true`, le résultat de la requête contiendra, pour chaque information retournée par défaut sous forme de clé, l'intitulé complet de celle-ci (vaut `false` par défaut).",
            "type": "boolean"
          },
          "abridged": {
            "description": "Lorsque ce paramètre vaut `true`, le résultat de la requête contiendra la version abrégée des décisions (sans texte intégral ni métadonnées détaillées, vaut `false` par défaut).",
            "type": "boolean"
          },
          "date_type": {
            "description": "Type de date à prendre en compte pour l’intervalle de dates fourni pour l’export (vaut `creation` ou `update`).",
            "type": "string"
          },
          "batch_size": {
            "description": "Permet de déterminer le nombre de résultats retournés par lot (1000 maximum, vaut 10 par défaut).",
            "type": "integer"
          },
          "batch": {
            "description": "Permet de déterminer le numéro du lot de résultats à retourner (le premier lot valant 0).",
            "type": "integer"
          }
        },
        "example": {
          "type": ["arret", "qpc"],
          "theme": [],
          "chamber": [],
          "formation": [],
          "jurisdiction": [],
          "committee": [],
          "publication": ["c", "b"],
          "solution": [],
          "date_start": "1970-01-01",
          "date_end": "2021-01-01",
          "order": "desc",
          "batch_size": 10,
          "batch": 0,
          "resolve_references": false
        }
      },
      "health": {
        "title": "Type d'objet `health`.",
        "description": "Objet décrivant l'état de disponibilité du service.",
        "required": ["status"],
        "type": "object",
        "properties": {
          "status": {
            "description": "État de disponibilité du service.",
            "enum": ["disponible", "indisponible"],
            "type": "string"
          }
        },
        "example": {
          "status": "disponible"
        }
      },
      "taxonItem": {
        "title": "Type d'objet `taxonItem`.",
        "description": "Objet décrivant un élément de la taxonomie.",
        "type": "object",
        "properties": {
          "key": {
            "description": "Clé de l'élément.",
            "type": "string"
          },
          "value": {
            "description": "Intitulé complet de l'élément.",
            "type": "string"
          }
        },
        "example": {
          "key": "cc",
          "value": "Cour de cassation"
        }
      },
      "taxonResult": {
        "title": "Type d'objet `taxonResult`.",
        "description": "Objet décrivant le résultat d'une requête `/taxonomy`.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Identifiant de l'entrée de taxonomie interrogée.",
            "type": "string"
          },
          "key": {
            "description": "Clé dont on veut récupérer l'intitulé complet (pour une requête avec `key`).",
            "type": "string"
          },
          "result": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/taxonItem"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "value": {
            "description": "Intitulé complet dont on veut récupérer la clé (pour une requête avec `value`).",
            "type": "string"
          }
        },
        "example": {
          "id": "publication",
          "key": "n",
          "result": {
            "value": "Non publié"
          }
        }
      },
      "stats": {
        "title": "Type d'objet `stats`.",
        "description": "Objet décrivant les statistiques publiées par l'API.",
        "required": [
          "indexedTotal",
          "newestDecision",
          "oldestDecision",
          "requestPerDay",
          "indexedByJurisdiction",
          "indexedByYear",
          "requestPerWeek",
          "requestPerMonth"
        ],
        "type": "object",
        "properties": {
          "requestPerDay": {
            "description": "Nombre moyen de requêtes de recherche par jour.",
            "type": "integer"
          },
          "oldestDecision": {
            "format": "date",
            "description": "Date de la décision la plus ancienne.",
            "type": "string"
          },
          "newestDecision": {
            "format": "date",
            "description": "Date de la décision la plus récente.",
            "type": "string"
          },
          "indexedTotal": {
            "description": "Nombre total de décisions indexées.",
            "type": "integer"
          },
          "indexedByJurisdiction": {
            "description": "Nombre de décisions indexées par juridiction.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/statItem"
            }
          },
          "indexedByYear": {
            "description": "Nombre de décisions indexées par année.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/statItem"
            }
          },
          "requestPerWeek": {
            "description": "Nombre moyen de requêtes de recherche par semaine.",
            "type": "integer"
          },
          "requestPerMonth": {
            "description": "Nombre moyen de requêtes de recherche par mois.",
            "type": "integer"
          }
        },
        "example": {
          "requestPerDay": 2500,
          "oldestDecision": "1856-07-27",
          "newestDecision": "2021-04-15",
          "indexedTotal": 2250000,
          "indexedByJurisdiction": [
            {
              "value": 1500000,
              "label": "Cour de cassation"
            },
            {
              "value": 135000,
              "label": "Cour d'appel de Paris"
            }
          ],
          "indexedByYear": [
            {
              "value": 250000,
              "label": "2019"
            },
            {
              "value": 195000,
              "label": "2018"
            }
          ],
          "requestPerWeek": 17500,
          "requestPerMonth": 520000
        }
      },
      "statItem": {
        "title": "Type d'objet `statItem`.",
        "description": "Décrit un élément de statistique.",
        "type": "object",
        "properties": {
          "value": {
            "description": "Valeur de l'élément.",
            "type": "integer"
          },
          "label": {
            "description": "Intitulé de l'élément.",
            "type": "string"
          }
        },
        "example": {
          "label": "Cour de cassation",
          "value": 1500000
        }
      }
    },
    "securitySchemes": {
      "admin": {
        "type": "apiKey",
        "description": "Administration (SDER).",
        "name": "JUDILIBRE-ADMIN-API-KEY",
        "in": "header"
      },
      "advanced": {
        "type": "apiKey",
        "description": "Accès avancé (réutilisateurs).",
        "name": "JUDILIBRE-ADVANCED-API-KEY",
        "in": "header"
      }
    }
  }
}
